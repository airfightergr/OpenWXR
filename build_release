#!/bin/bash
# CDDL HEADER START
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# CDDL HEADER END

# Copyright 2018 Saso Kiselkov. All rights reserved.

OUTPUT_DIR="OpenWXR"
case $(uname) in
Darwin)
	INSTALL="ginstall -D -m 644"
	;;
*)
	INSTALL="install -D -m 644"
	;;
esac

if ! which glslang &> /dev/null && ! which glslangValidator &> /dev/null; then
	cat << EOF >&2
Couldn't find the Vulkan SDK. Please download the SDK from:
https://vulkan.lunarg.com/
Then symlink glslangValidator and spirv-cross in your \$PATH

On Ubuntu, you can use this guide to install the Vulkan SDK as a package
(see section "Install the SDK"):
https://vulkan.lunarg.com/doc/sdk/1.2.148.1/linux/getting_started_ubuntu.html
With the Ubuntu package, everything will be set up for you.
EOF
	exit 1
fi

set -e

rm -rf "$OUTPUT_DIR" "$OUTPUT_DIR.zip"
mkdir -p "$OUTPUT_DIR"

( cd qmake && ./build ) || exit 1

if [[ $(uname) = Linux ]]; then
	( cd data && make ) || exit 1
fi

if [[ $(uname) = "Linux" ]]; then
	$INSTALL -- "qmake/output/lin_x64/${OUTPUT_DIR}.xpl" \
	    "$OUTPUT_DIR/lin_x64/${OUTPUT_DIR}.xpl"
	$INSTALL -- "qmake/output/win_x64/${OUTPUT_DIR}.xpl" \
	    "$OUTPUT_DIR/win_x64/${OUTPUT_DIR}.xpl"
	$INSTALL -- "qmake/output/win_x64/syms.txt" \
	    "$OUTPUT_DIR/win_x64/syms.txt"
else
	$INSTALL -- "qmake/output/mac_x64/${OUTPUT_DIR}.xpl" \
	    "$OUTPUT_DIR/mac_x64/${OUTPUT_DIR}.xpl"
fi

find data/bin fonts -iname '*.opus' -or -iname '*.glsl*' -or -iname '*.spv' \
    -or -iname '*.ttf' -or -iname '*.otf' | \
    while read; do
	$INSTALL -- "$REPLY" "$OUTPUT_DIR/$REPLY"
done

while getopts "a:" opt; do
	case "$opt" in
	a)
		ACF_TYPE="$OPTARG"
		;;
	esac
done

if [[ "$ACF_TYPE" != "" ]]; then
	cp "acf-configs/$ACF_TYPE/OpenWXR.cfg" "$OUTPUT_DIR"
fi

$INSTALL -- "api/openwxr/xplane_api.h" "$OUTPUT_DIR/openwxr/xplane_api.h"
$INSTALL -- "api/openwxr/wxr_intf.h" "$OUTPUT_DIR/openwxr/wxr_intf.h"

# ZIP up the product
zip -r "$OUTPUT_DIR.zip" "$OUTPUT_DIR"
